const { ActivityHandler, MessageFactory, ActivityTypes } = require('botbuilder');
const { QuestionUnderstand } = require('./src/assets/question-understand/index');
const { ApiHelper } = require('./src/assets/bot-api/index')
const { CardBuilder } = require('./src/card/index')


class EchoBot extends ActivityHandler {
    constructor() {
        super();
        const defaultAnswer =
            'üí°–•“Ø—Å—Å—ç–Ω –±–∞–π–≥—É—É–ª–ª–∞–≥—ã–Ω—Ö–∞–∞ –∞–∂–ª—ã–Ω –±–∞–π—Ä–Ω—ã –º—ç–¥—ç—ç–ª–ª–∏–π–≥ —Ü–∞–≥ –∞–ª–¥–∞–ª–≥“Ø–π –∞–≤–∞–∞—Ä–∞–π. (–ñ–∏—à—ç—ç–ª–±—ç–ª: –ì–æ–ª–æ–º—Ç –ë–∞–Ω–∫-–¥ –•—É—É–ª—å—á –∞–∂–ª—ã–Ω –±–∞–π—Ä–Ω—ã –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª?)'
        const noResponse =
            '–£—É—á–ª–∞–∞—Ä–∞–π —Ç–∞–Ω—ã –∞—Å—É—É–ª—Ç–∞–¥ —Ö–∞—Ä–∏—É–ª—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π. –û–¥–æ–æ–≥–æ–æ—Ä —á–∞—Ç–±–æ—Ç–Ω—ã —Ö–∞—Ä–∏—É–ª–∂ —á–∞–¥–∞—Ö –∞—Å—É—É–ª—Ç:'
        this.onMessage(async (context, next) => {
            const question = new QuestionUnderstand(context.activity.text);
            const api = new ApiHelper(question.findKeyWord(), question.getQueryNumber())
            console.log(question.queryNumber, api.keyword)
            var responseBody = await api.responseBack()

            if (!(responseBody === undefined) && !(responseBody.length == 0)) {
                const view = new CardBuilder(responseBody);
                switch (question.getQueryNumber()) {
                    case 1:
                        await context.sendActivity({
                            attachments: [view.createAdvertisementCard()]
                        })
                        break
                    case 404:
                        await context.sendActivity(
                            MessageFactory.text('noResponse')
                        )
                }
            }
            else {
                await context.sendActivity(MessageFactory.text(noResponse, noResponse));
                await context.sendActivity(MessageFactory.text(defaultAnswer, defaultAnswer));
            }
            await next();
        });

        this.onMembersAdded(async (context, next) => {
            const membersAdded = context.activity.membersAdded;
            const welcomeText =
                '–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É! –¢–∞ –∞–∂–ª—ã–Ω –±–∞–π—Ä–Ω—ã —Ç—É—Å–ª–∞—Ö —á–∞—Ç–±–æ—Ç—Ç–æ–π —Ö–æ–ª–±–æ–≥–¥–ª–æ–æ. ü§ó';
            for (let cnt = 0; cnt < membersAdded.length; ++cnt) {
                if (membersAdded[cnt].id !== context.activity.recipient.id) {
                    await context.sendActivity(MessageFactory.text(welcomeText, welcomeText));
                    await context.sendActivity(MessageFactory.text(defaultAnswer, defaultAnswer));
                }
            }
            await next();
        });
    }
}

module.exports.EchoBot = EchoBot;
